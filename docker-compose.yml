# 컨테이너(서비스) 정의
services:

  mariaDB_database:
    image: mariadb:latest                                         # mysql 최신버전을 도커 허브에서 가져옴
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mariadb-data:/var/lib/mysql                          # MariaDB 데이터 저장 경로'
      - ./init-scripts:/docker-entrypoint-initdb.d           # 초기화 SQL 스크립트 실행
    restart: always
    healthcheck: # 10초마다 헬스체크
      test: [ "CMD-SHELL", "mariadb -u root -proot -e 'SELECT 1'" ]
      interval: 3s
      timeout: 15s
      retries: 6
    networks:
      - kafka

  # 카프카 서비스
  kafka:
    image: "apache/kafka:3.8.0"
    container_name: kafka
    build:
      context: ./
      dockerfile: DockerFile_kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller                                           # KRaft 모드 활성화
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER                                      # 컨트롤러 리스너 지정
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093              # 브로커 리스너 설정
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092                               # 외부 클라이언트 접근 설정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT   # 보안 프로토콜 설정
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT                                      # 브로커 간 통신 리스너
      KAFKA_LOG_DIRS: /var/lib/kafka/data                                              # 브로커 데이터 저장 디렉토리
      KAFKA_CLUSTER_ID: "hYiSnflwTKagsUxKkTPffw"                                       # 클러스터 ID 설정
      KAFKA_NODE_ID: 1                                                                 # 노드 ID 추가
      KAFKA_CONTROLLER_QUORUM_BOOTSTRAP_SERVERS: "kafka:9093"                          # 컨트롤러 부트스트랩 서버 설정
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"                                   # KRaft 컨트롤러 설정
      AUTO_CREATE_TOPICS_ENABLE: true                                                 # 자동 토픽 생성 활성화
    volumes:
      - kafka_data:/var/lib/kafka/data
      - ./init-scripts/kafka-entrypoint.sh:/usr/local/bin/kafka-entrypoint.sh         # 쉘 스크립트를 컨테이너 내부로 마운트
    entrypoint: ["/bin/sh", "-c", "/usr/local/bin/kafka-entrypoint.sh"]
    networks:
      - kafka

  kafka-test:
    container_name: kafka-test
    build:
      context: ./
      dockerfile: DockerFile_webService
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started
      mariaDB_database:
        condition: service_healthy
    networks:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariaDB_database:3306/kafka
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    restart: on-failure


# 네임드 볼륨 정의 => 컨테이너가 삭제되더라도 데이터 유지
volumes:
  kafka_data:
  mariadb-data:

networks:
  kafka: